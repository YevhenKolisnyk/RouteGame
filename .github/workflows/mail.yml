name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
     # The type of runner that the job will run on
    runs-on: windows-latest

    env:
      SigningCertificate: RouteGame_TemporaryKey.pfx
      UWP_Project_Directory: RouteGame

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
   
    - name: Decode the Pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.CERT_BASE64 }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:UWP_Project_Directory -AdditionalChildPath $env:SigningCertificate
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        
    - name: Build the sideload solution
      run: msbuild RouteGame.sln /p:Platform=x86 /p:AppxBundle=$env:AppxBundle /p:AppxBundlePlatforms="x86|x64" /p:AppxPackageDir=Deploy /p:PackageCertificateKeyFile=$env:SigningCertificate /p:PackageCertificatePassword=${{ secrets.CERT_PWD }} /restore
      env:
        AppxBundle: Always
        BuildMode: StoreUpload
        Configuration: Release
        
    - name: Remove the .pfx
      run: Remove-Item -path $env:UWP_Project_Directory/$env:SigningCertificate
  
    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: RouteGame_Sideload
        path: .\RouteGame\Deploy
